# Copyright 2024 Sam Windell
# SPDX-License-Identifier: GPL-3.0-or-later

name: CI

on:
  workflow_dispatch:
  push:
  pull_request:

jobs:
  compile:
    name: Compile
    timeout-minutes: 30
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - uses: nicknovitski/nix-develop@v1.1.0
      - uses: Hanaasagi/zig-action-cache@master
        with:
          cache-directories: |
            .zig-cache
            build_gen

      - if: matrix.os == 'ubuntu-latest'
        name: Compile Linux
        run: just build linux

      - if: matrix.os == 'ubuntu-latest'
        name: Compile Windows
        id: compile_windows
        continue-on-error: true
        run: just build windows

      - name: Compile Mac
        continue-on-error: true
        run: just build mac_ub

      - name: Tests
        continue-on-error: true
        run: just test-ci

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: build_gen/coverage-out/tests
          verbose: true
          fail_ci_if_error: true

      # IMPORTANT(upload-artifact): 
      #  1. If multiple paths are provided as input, the least common ancestor of all the search paths will be used as the 
      #     root directory of the artifact. 
      #  2. All file permissions are removed when uploading.

      - name: Upload Windows binaries
        if: matrix.os == 'ubuntu-latest' && steps.compile_windows.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: binaries-windows
          if-no-files-found: error
          retention-days: 2
          path: |
            zig-out/x86-windows/Floe.vst3
            zig-out/x86-windows/Floe.clap
            zig-out/x86-windows/tests.exe
            zig-out/x86-windows/VST3-Validator.exe

  test:
    strategy:
      fail-fast: false # run even if others in this matrix failed
      matrix:
        system: [
          {os: windows, log-root-dir: "C:/Users/runner/AppData/Local" },
        ]
        test: [ unit, vst3val, pluginval, clapval ]
    name: ${{ matrix.system.os }}-${{ matrix.test }}
    runs-on: ${{ matrix.system.os }}-latest
    needs: compile
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: |
            test_files
            .github

      # The artifact will be installed to ${{ github.workspace }}
      - uses: actions/download-artifact@v4
        with:
          name: binaries-${{ matrix.system.os }}

      - if: matrix.system.os == 'windows'
        shell: pwsh
        name: ${{ matrix.test }}
        run: |
          tree /F 
          powershell -ExecutionPolicy Bypass -File .github\scripts\run-test.ps1 -test_type ${{ matrix.test }} -binaries_dir "${{ github.workspace }}"

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: log-${{ matrix.system.os }}-${{ matrix.test }}
          if-no-files-found: ignore
          path: ${{ matrix.system.log-root-dir }}/FrozenPlain/floe.log

