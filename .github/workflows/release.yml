# Copyright 2024 Sam Windell
# SPDX-License-Identifier: GPL-3.0-or-later

name: Release

on:
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: ubuntu-latest # NOTE: we don't actually use Windows
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - uses: nicknovitski/nix-develop@v1.1.0
      - uses: Hanaasagi/zig-action-cache@master
        with:
          cache-directories: |
            .zig-cache
            build_gen

      - run: just build-release windows

      - run: just windows-prepare-release
        env:
          WINDOWS_CODESIGN_CERT_PFX: ${{ secrets.WINDOWS_CODESIGN_CERT_PFX }}
          WINDOWS_CODESIGN_CERT_PFX_PASSWORD: ${{ secrets.WINDOWS_CODESIGN_CERT_PFX_PASSWORD }}

      - name: 'get release dir from just'
        run: |
          export RELEASE_DIR=$(just --evaluate release_files_dir)
          echo "RELEASE_DIR=${RELEASE_DIR}" >> $GITHUB_ENV

      - uses: actions/upload-artifact@v4
        with:
          name: final-windows
          if-no-files-found: error
          path: ${{ env.RELEASE_DIR }}

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - uses: nicknovitski/nix-develop@v1.1.0
      - uses: Hanaasagi/zig-action-cache@master
        with:
          cache-directories: |
            .zig-cache
            build_gen

      - run: just build-release mac_ub

      - uses: apple-actions/import-codesign-certs@v3
        with: 
          p12-file-base64: ${{ secrets.MACOS_DEV_CERTS_P12 }}
          p12-password: ${{ secrets.MACOS_DEV_CERTS_P12_PASSWORD }}

      - run: just macos-prepare-release
        env:
          MACOS_DEV_ID_INSTALLER_NAME: ${{ secrets.MACOS_DEV_ID_INSTALLER_NAME }}
          MACOS_DEV_ID_APP_NAME: ${{ secrets.MACOS_DEV_ID_APP_NAME }}
          MACOS_NOTARIZATION_USERNAME: ${{ secrets.MACOS_NOTARIZATION_USERNAME }}
          MACOS_NOTARIZATION_PASSWORD: ${{ secrets.MACOS_NOTARIZATION_PASSWORD }}
          MACOS_TEAM_ID: ${{ secrets.MACOS_TEAM_ID }}

      - name: 'get release dir from just'
        run: |
          export RELEASE_DIR=$(just --evaluate release_files_dir)
          echo "RELEASE_DIR=${RELEASE_DIR}" >> $GITHUB_ENV

      - uses: actions/upload-artifact@v4
        with:
          name: final-macos
          if-no-files-found: error
          path: ${{ env.RELEASE_DIR }}

  deploy:
    needs: [build-macos, build-windows]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: version.txt

      - uses: taiki-e/install-action@just

      - name: 'Set Env'
        run: |
          export VERSION=$(cat version.txt)
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          just latest-changes > latest_changes.md

      - uses: actions/download-artifact@v4
        with:
          pattern: final-*
          path: release_files
          merge-multiple: true

      - uses: ncipollo/release-action@v1
        with:
          artifactErrorsFailBuild: true
          artifacts: "release_files/*"
          name: Release v${{ env.VERSION }}
          tag: v${{ env.VERSION }}
          draft: true
          bodyFile: latest_changes.md

