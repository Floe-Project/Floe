// Copyright 2025 Sam Windell
// SPDX-License-Identifier: GPL-3.0-or-later

#pragma once

#include "foundation/foundation.hpp"

enum class TagCategory {
    SoundSource,
    RealInstrument,
    Material,
    ReverbType,
    MoodPositive,
    MoodNegative,
    MoodMixed,
    MoodThematic,
    Pitch,
    SoundTypeLong,
    SoundTypeShort,
    SoundTypeSequence,
    SoundTypeRole,
    TimbreModulation,
    TimbreRealTone,
    TimbreSynthTechnique,
    TimbreFrequency,
    Genre,
    Count,
};

struct Tag {
    String tag;
    String description;
};

struct TagCategoryInfo {
    String name;
    String question;
    String recommendation;
    Span<Tag const> tags;
};

PUBLIC TagCategoryInfo Tags(TagCategory category) {
    switch (category) {
        case TagCategory::SoundSource: {
            static constexpr auto k_tags = ArrayT<Tag>({
                {"synthesized", "Generated by algorithms or circuits"},
                {"acoustic", "Originating from a real instrument"},
                {"vocal", "Originating from a human voice"},
                {"hybrid", "Combines acoustic/vocal sounds with processed/synthesized elements"},
                {"field recording", "Environmental or location recordings"},
                {"found sounds", "Real objects not traditionally used for music"},
            });
            return {
                .name = "Sound source",
                .question = "Where did the sound come from?",
                .recommendation =
                    "It's strongly recommended to specify a sound-source for instruments and impulse responses. This is sometimes not applicable for presets.",
                .tags = k_tags,
            };
        }
        case TagCategory::RealInstrument: {
            static constexpr auto k_tags = ArrayT<Tag>({
                {"piano", ""},
                {"keys", ""},
                {"strings", "Bowed strings such as violin, viola, cello, double bass"},
                {"violin", ""},
                {"cello", ""},
                {"plucked strings", "Plucked strings such as guitar, harp, mandolin"},
                {"struck strings", "Struck strings such as hammered dulcimer, santur"},
                {"guitar", ""},
                {"bass", ""},
                {"brass", ""},
                {"wind", ""},
                {"percussion", ""},
                {"drums", ""},
                {"vocal", ""},
                {"choir", ""},
                {"folk", ""},
                {"organ", ""},
                {"tonal percussion", ""},
                {"solo", "Number of instruments: solo"},
                {"ensemble", "Number of instruments: ensemble"},
            });
            return {
                .name = "Real instrument category",
                .question = "Does it fit in a real instrument category?",
                .recommendation =
                    "These are mostly relevant for acoustic or hybrid sounds, but can be used for synthesized sounds that emulate these instruments.",
                .tags = k_tags,
            };
        }
        case TagCategory::Material: {
            static constexpr auto k_tags = ArrayT<Tag>({
                {"wood", ""},
                {"metal", ""},
                {"glass", ""},
                {"plastic", ""},
                {"rubber", ""},
                {"stone", ""},
                {"ice", ""},
            });
            return {
                .name = "Material",
                .question = "Is it made from a specific material?",
                .recommendation =
                    "This is typically used for non-standard instruments in the `acoustic` or `found sounds` categories.",
                .tags = k_tags,
            };
        }
        case TagCategory::ReverbType: {
            static constexpr auto k_tags = ArrayT<Tag>({
                {"small room", ""},
                {"large room", ""},
                {"chamber", ""},
                {"studio", ""},
                {"hall", ""},
                {"church", ""},
                {"cathedral", ""},
                {"unusual", ""},
                {"open air", ""},
            });
            return {
                .name = "Reverb type",
                .question = "What reverb type is it?",
                .recommendation =
                    "Strongly recommended for impulse responses. Not applicable for instruments or presets.",
                .tags = k_tags,
            };
        }
        case TagCategory::MoodPositive: {
            static constexpr auto k_tags = ArrayT<Tag>({
                {"bright", "Positive, uplifting, clear"},
                {"dreamy", ""},
                {"ethereal", ""},
                {"hopeful", ""},
                {"nostalgic", ""},
                {"peaceful", ""},
                {"playful", ""},
            });
            return {
                .name = "Mood (positive)",
                .question = "What mood does the item evoke?",
                .recommendation =
                    "It's usually recommended to specify moods for synthesised instruments and presets. Not typically used for well-known acoustic instruments.",
                .tags = k_tags,
            };
        }
        case TagCategory::MoodNegative: {
            static constexpr auto k_tags = ArrayT<Tag>({
                {"aggressive", ""},
                {"chaotic", ""},
                {"dark", "Unhappy, dim, unpleasant"},
                {"disturbing", ""},
                {"eerie", ""},
                {"melancholic", ""},
                {"menacing", ""},
                {"tense", ""},
            });
            return {
                .name = "Mood (negative)",
                .question = "What mood does the item evoke?",
                .recommendation =
                    "It's usually recommended to specify moods for synthesised instruments and presets. Not typically used for well-known acoustic instruments.",
                .tags = k_tags,
            };
        }
        case TagCategory::MoodMixed: {
            static constexpr auto k_tags = ArrayT<Tag>({
                {"bittersweet", ""},
                {"hypnotic", ""},
                {"mysterious", ""},
                {"quirky", ""},
            });
            return {
                .name = "Mood (mixed)",
                .question = "What mood does the item evoke?",
                .recommendation =
                    "It's usually recommended to specify moods for synthesised instruments and presets. Not typically used for well-known acoustic instruments.",
                .tags = k_tags,
            };
        }
        case TagCategory::MoodThematic: {
            static constexpr auto k_tags = ArrayT<Tag>({
                {"dramatic", ""},
                {"dystopian", ""},
                {"epic", ""},
                {"experimental", ""},
                {"fantasy", ""},
                {"heroic", ""},
                {"noir", ""},
                {"romantic", ""},
                {"sci-fi", ""},
                {"western", ""},
            });
            return {
                .name = "Mood (thematic)",
                .question = "What mood does the item evoke?",
                .recommendation =
                    "It's usually recommended to specify moods for synthesised instruments and presets. Not typically used for well-known acoustic instruments.",
                .tags = k_tags,
            };
        }
        case TagCategory::Pitch: {
            static constexpr auto k_tags = ArrayT<Tag>({
                {"multi-pitched", "Contains multiple distinct notes"},
                {"non-pitched", "Lacks identifiable musical pitch"},
                {"dissonant", "Contains harmonically clashing pitches"},
            });
            return {
                .name = "Pitch",
                .question = "What are its pitch characteristics?",
                .recommendation =
                    "Useful for non-typical sounds that have notable pitch characteristics. A sound is assumed to possess a musical pitch unless otherwise stated.",
                .tags = k_tags,
            };
        }
        case TagCategory::SoundTypeLong: {
            static constexpr auto k_tags = ArrayT<Tag>({
                {"pad", "Sustained, pitched background harmonic element"},
                {"texture", "Sustained atmospheric element, typically less of a musical pitch than `pad`"},
                {"soundscape", "Complex and rich sonic environment"},
                {"underscore", "Background tones or sequences for underneath dialogue"},
                {"noise", "Non-pitched and constant, similar to white noise"},
            });
            return {
                .name = "Sound type (long duration)",
                .question = "What type of sound is it?",
                .recommendation = "",
                .tags = k_tags,
            };
        }
        case TagCategory::SoundTypeShort: {
            static constexpr auto k_tags = ArrayT<Tag>({
                {"hit", "Single impactful sound with pitch and percussive elements"},
                {"keys", "Piano or keyboard-like"},
                {"oneshot", "Non-looping single sound, typically not for playing chromatically"},
                {"percussion", "Rhythmic element, typically non-pitched"},
                {"pluck", "Short melodic notes"},
                {"stab", "Extra-short melodic notes"},
            });
            return {
                .name = "Sound type (short duration)",
                .question = "What type of sound is it?",
                .recommendation = "",
                .tags = k_tags,
            };
        }
        case TagCategory::SoundTypeSequence: {
            static constexpr auto k_tags = ArrayT<Tag>({
                {"arp", "Arpeggiated pattern of notes"},
                {"sequence", "Sequenced pattern timbre changes"},
                {"loop", "Sampled repeating phrase"},
            });
            return {
                .name = "Sound type (sequence or pattern)",
                .question = "What type of sound is it?",
                .recommendation = "",
                .tags = k_tags,
            };
        }
        case TagCategory::SoundTypeRole: {
            static constexpr auto k_tags = ArrayT<Tag>({
                {"lead", "Foreground melodic element"},
                {"bass", "Low-frequency foundation"},
                {"riser", "Building tension element"},
                {"downer", "Descending tension element"},
                {"sound-fx", "Special effect sound"},
                {"transition", "Section change element"},
            });
            return {
                .name = "Sound type (role in a track)",
                .question = "What type of sound is it?",
                .recommendation = "",
                .tags = k_tags,
            };
        }
        case TagCategory::TimbreModulation: {
            static constexpr auto k_tags = ArrayT<Tag>({
                {"pulsing", "Rhythmic modulation"},
                {"evolving", "Changing over time"},
                {"glitched", "Digital error artefacts"},
                {"grainy", "Fine textural irregularities"},
            });
            return {
                .name = "Timbre (modulation)",
                .question = "What is its timbre like?",
                .recommendation = "",
                .tags = k_tags,
            };
        }
        case TagCategory::TimbreRealTone: {
            static constexpr auto k_tags = ArrayT<Tag>({
                {"brassy", "Like brass instruments"},
                {"breathy", "Containing air noise, like wind instruments"},
                {"strings-like", "Characteristic resonance of string instruments"},
                {"reedy", "Characteristic of reed instruments"},
            });
            return {
                .name = "Timbre (real instrument tone)",
                .question = "What is its timbre like?",
                .recommendation = "",
                .tags = k_tags,
            };
        }
        case TagCategory::TimbreSynthTechnique: {
            static constexpr auto k_tags = ArrayT<Tag>({
                {"analog", "Warm, imprecise, vintage character"},
                {"fm", "Frequency modulation synthesis"},
                {"granular", "Granular synthesis"},
                {"physical modelling", "Simulating real-world physics"},
            });
            return {
                .name = "Timbre (synthesis technique)",
                .question = "What is its timbre like?",
                .recommendation = "",
                .tags = k_tags,
            };
        }
        case TagCategory::TimbreFrequency: {
            static constexpr auto k_tags = ArrayT<Tag>({
                {"airy", "Open, spacious, light"},
                {"circuit-bent", "Characteristic of modified electronic devices"},
                {"cold", "Thin, clinical, lacking warmth"},
                {"digital", "Clean, precise, computer-generated character"},
                {"distorted", "Overdriven, crushed, non-linear"},
                {"fuzzy", "Indistinct, soft-edged, unclear"},
                {"glassy", "Clear, fragile, transparent"},
                {"gritty", "Rough, textured, unpolished"},
                {"harsh", "Abrasive, aggressive high frequencies"},
                {"lo-fi", "Intentionally degraded quality"},
                {"lush", "Full, rich, densely layered"},
                {"metallic", "Resonant, hard, bright, like metal"},
                {"muddy", "Unclear low-mid frequencies"},
                {"muffled", "Dampened high frequencies"},
                {"nasal", "Strong mid-range resonance"},
                {"noisy",
                 "Contains noise components, imperfect. If the sound is 100% noise use `noise` instead."},
                {"pure", "Free from noise, clean sine-like quality"},
                {"resonant", "Strong resonant peaks in frequency"},
                {"saturated", "Subtly distorted, harmonically enhanced"},
                {"smooth", "Even, consistent, without sharp edges"},
                {"thin", "Lacking in fullness, narrow frequency range"},
                {"warm", "Rich in harmonics, pleasant mid-range"},
            });
            return {
                .name = "Timbre (frequency)",
                .question = "What is its timbre like?",
                .recommendation = "",
                .tags = k_tags,
            };
        }
        case TagCategory::Genre: {
            static constexpr auto k_tags = ArrayT<Tag>({
                {"80s", ""},        {"EDM", ""},       {"IDM", ""},         {"ambient", ""},
                {"blues", ""},      {"chillout", ""},  {"chiptune", ""},    {"cinematic", ""},
                {"disco", ""},      {"downtempo", ""}, {"drum & bass", ""}, {"dubstep", ""},
                {"electronic", ""}, {"folk", ""},      {"funk", ""},        {"future bass", ""},
                {"glitch", ""},     {"hip-hop", ""},   {"house", ""},       {"industrial", ""},
                {"jazz", ""},       {"lo-fi", ""},     {"metal", ""},       {"orchestral", ""},
                {"pop", ""},        {"rock", ""},      {"synthwave", ""},   {"techno", ""},
                {"trance", ""},     {"trap", ""},      {"vaporwave", ""},   {"world", ""},
            });
            return {
                .name = "Genre",
                .question = "What genres might this item fit best into?",
                .recommendation =
                    "Specifying at least one genre is recommended for all presets and instruments.",
                .tags = k_tags,
            };
        }
        case TagCategory::Count: break;
    }
    return {};
}
